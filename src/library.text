
import './App.css'

function App() {
  

  return (
    <>

const BooksList = ({ books }) => {
  return (
    <div className="container mx-auto p-4">
      <h1 className="text-3xl font-bold mb-4">Library Books</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {books.map((book) => (
          <div key={book.id} className="bg-white p-6 rounded-lg shadow-lg">
            <h2 className="text-2xl font-bold mb-2">{book.title}</h2>
            <p className="text-sm text-gray-600">by {book.author}</p>
            <p className="text-gray-800 mt-2">{book.genre}</p>
            <p className="text-gray-600 text-xs mt-2">Published: {book.publishedDate}</p>
            <div className="mt-4 flex justify-between">
              <button className="bg-blue-500 text-white py-1 px-4 rounded">View</button>
              <button className="bg-yellow-500 text-white py-1 px-4 rounded">Edit</button>
              <button className="bg-red-500 text-white py-1 px-4 rounded">Delete</button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

const BookDetails = ({ book }) => {
  return (
    <div className="container mx-auto p-4">
      <div className="bg-white p-6 rounded-lg shadow-lg">
        <h1 className="text-3xl font-bold">{book.title}</h1>
        <p className="text-lg text-gray-700">by {book.author}</p>
        <p className="text-gray-600 mt-4">{book.description}</p>
        <div className="mt-4">
          <span className="text-gray-800">Genre: {book.genre}</span>
          <span className="text-gray-600 ml-4">Published: {book.publishedDate}</span>
        </div>
        <div className="mt-6 flex justify-between">
          <button className="bg-yellow-500 text-white py-2 px-4 rounded">Edit</button>
          <button className="bg-red-500 text-white py-2 px-4 rounded">Delete</button>
        </div>
      </div>
    </div>
  );
};

const BookForm = ({ book, handleSubmit }) => {
  const [formData, setFormData] = useState({
    title: book?.title || '',
    author: book?.author || '',
    genre: book?.genre || '',
    publishedDate: book?.publishedDate || '',
    description: book?.description || ''
  });

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">{book ? 'Edit Book' : 'Add Book'}</h1>
      <form onSubmit={(e) => handleSubmit(e, formData)} className="bg-white p-6 rounded-lg shadow-lg">
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Title</label>
          <input
            type="text"
            name="title"
            value={formData.title}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Author</label>
          <input
            type="text"
            name="author"
            value={formData.author}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Genre</label>
          <input
            type="text"
            name="genre"
            value={formData.genre}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Published Date</label>
          <input
            type="date"
            name="publishedDate"
            value={formData.publishedDate}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Description</label>
          <textarea
            name="description"
            value={formData.description}
            onChange={handleChange}
            className="w-full p-2 border rounded"
          ></textarea>
        </div>
        <button type="submit" className="bg-blue-500 text-white py-2 px-4 rounded">
          {book ? 'Update Book' : 'Add Book'}
        </button>
      </form>
    </div>
  );
};

    
    </>
  )
};

const BookForm = ({ book, handleSubmit }) => {
  const [formData, setFormData] = useState({
    title: book?.title || '',
    author: book?.author || '',
    genre: book?.genre || '',
    publishedDate: book?.publishedDate || '',
    description: book?.description || ''
  });

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">{book ? 'Edit Book' : 'Add Book'}</h1>
      <form onSubmit={(e) => handleSubmit(e, formData)} className="bg-white p-6 rounded-lg shadow-lg">
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Title</label>
          <input
            type="text"
            name="title"
            value={formData.title}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Author</label>
          <input
            type="text"
            name="author"
            value={formData.author}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Genre</label>
          <input
            type="text"
            name="genre"
            value={formData.genre}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Published Date</label>
          <input
            type="date"
            name="publishedDate"
            value={formData.publishedDate}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-bold mb-2">Description</label>
          <textarea
            name="description"
            value={formData.description}
            onChange={handleChange}
            className="w-full p-2 border rounded"
          ></textarea>
        </div>
        <button type="submit" className="bg-blue-500 text-white py-2 px-4 rounded">
          {book ? 'Update Book' : 'Add Book'}
        </button>
      </form>
    </div>
  );
};

const SearchBar = ({ searchQuery, setSearchQuery }) => {
  return (
    <div className="w-full md:w-1/2 mx-auto my-6">
      <input
        type="text"
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
        placeholder="Search by title, author, or genre"
        className="w-full p-2 border border-gray-300 rounded-lg"
      />
    </div>
  );
};


export default App
